#!/bin/bash
# shellcheck disable=SC2207
#
# Stack based, low-typing, directory management. Sorta like pushd/popd, but
# different.
#
# ref.
# https://notes.burke.libbey.me/ansi-escape-codes/

declare -ax _DIR_STACK=()

function _d_init {
   for __ in {1..7} ; do
      printf '\n'
   done
   printf '\e[7F> '
}


function _d_bye {
   printf '\e[G\e[K'

   for __ in {1..6}; do
      printf '\e[E\e[K'
   done

   printf '\e[6F'
   printf 'Bye.\n'
}


function _d_data {
   local -a lines=()

   local d
   for d in "${_DIR_STACK[@]::5}" ; do
      lines=(
         $(realpath -ms --relative-base="$PWD"  "$d")
         "${lines[@]}"
      )
   done

   local space
   for (( space=(5 - ${#lines[@]}); space>0; space-- )) ; do
      lines+=( '' )
   done

   printf '\e[G\e[K'
   printf '\e[E\e[K'

   local data
   for data in "${lines[@]}" ; do       # Data block (5 lines)
      printf '\e[E\e[K%s' "$data"
   done

   printf '\e[6F'
}


function d0 {
   while (( $# )) ; do
      case "$1" in
         # DUP top entry on the stack.
         d) shift
            (( ${#_DIR_STACK[@]} )) || return 0
            _DIR_STACK+=( "${_DIR_STACK[-1]}" )
            ;;

         # SWAP top two dirs on the stack.
         s) shift
            (( ${#_DIR_STACK[@]} >= 2 )) || return 1
            _DIR_STACK+=( "${_DIR_STACK[-2]}" )
            unset '_DIR_STACK[-3]'

            _DIR_STACK=( "${_DIR_STACK[@]}" ) # patch holes
            ;;

         # PUSH cwd.
         p) shift
            _DIR_STACK+=( "$PWD" )
            ;;

         # ROT dirs down.
         r) shift
            (( ${#_DIR_STACK[@]} >= 3 )) || return 1
            local a="${_DIR_STACK[-1]}" ; unset '_DIR_STACK[-1]'
            local b="${_DIR_STACK[-1]}" ; unset '_DIR_STACK[-1]'
            local c="${_DIR_STACK[-1]}" ; unset '_DIR_STACK[-1]'
            _DIR_STACK+=( "$c" "$a" "$b" )
            ;;

         # TOGGLE between the top two directories:  SWAP DUP .
         t) shift
            set -- s d . "$@"
            ;;

         # LIST directories on the stack.
         l) shift
            (( ${#_DIR_STACK[@]} )) || return 0
            realpath -ms --relative-base="$PWD"  "${_DIR_STACK[@]::5}" \
            | sed "s,${HOME},~," \
            | column -t          \
            | tac
            ;;

         # CYCLE all directories upwards.
         c) shift
            (( ${#_DIR_STACK[@]} )) || return 0
            _DIR_STACK=( "${_DIR_STACK[-1]}"  "${_DIR_STACK[@]::${#_DIR_STACK[@]}-1}" )
            ;;

         # Pops top of stack, `cd`
         '.')  shift
            (( ${#_DIR_STACK[@]} )) || return 1
            cd "${_DIR_STACK[-1]}" || return 1
            unset '_DIR_STACK[-1]'
            ;;

         ??*) 
            set -- "${1::1}" "${1:1}" "${@:2}"
            ;;
      esac
   done
}


function d {
   _d_init
   _d_data

   trap _d_bye SIGINT

   local c
   while IFS= read -s -d '' -r -n1 c ; do
      if [[ "$c" != $'\n' ]] ; then
         printf '\e[G\e[K %s' "$c"
      fi

      case "$c" in
         d) # DUP top entry on the stack.
            (( ${#_DIR_STACK[@]} )) || continue
            _DIR_STACK+=( "${_DIR_STACK[-1]}" )
            ;;
         
         s) # SWAP top two dirs on the stack.
            (( ${#_DIR_STACK[@]} >= 2 )) || continue
            _DIR_STACK+=( "${_DIR_STACK[-2]}" )
            unset '_DIR_STACK[-3]'

            _DIR_STACK=( "${_DIR_STACK[@]}" ) # patch holes
            ;;

         p) # PUSH cwd.
            _DIR_STACK+=( "$PWD" )
            ;;

         '.') # POP top, don't CD
            unset '_DIR_STACK[-1]'
            ;;

         r) # ROT all directories upwards.
            (( ${#_DIR_STACK[@]} )) || continue
            _DIR_STACK=(
               "${_DIR_STACK[-1]}"
               "${_DIR_STACK[@]::${#_DIR_STACK[@]}-1}"
            )
            ;;

         # Pops top of stack, and `cd`
         $'\n')
            (( ${#_DIR_STACK[@]} )) || continue
            if cd "${_DIR_STACK[-1]}" ; then
               _d_bye
               unset '_DIR_STACK[-1]'
               return 0
            fi
            ;;

         # Exit on ctrl+d, escape, `;'.
         '' | $'' | ';')
            _d_bye ; return 0 ;;
      esac

      _d_data
   done
}


_DIR_STACK=( ~/hg/twce/conflang/build/ "$PWD" ~/.config/i3 )
d
